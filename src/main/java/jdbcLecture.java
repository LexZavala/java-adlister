import com.mysql.jdbc.Driver;

import java.sql.*;

public class jdbcLecture  {
    public static void main(String[] args) throws SQLException {

        Config config =  new Config();
        // Instantiate the mysql driver to register to the built in Java Driver Manager

        DriverManager.registerDriver(new Driver());

        // Connect to the database by providing the URL, user, and the password of the user wwe want to connect as.
        Connection connection = DriverManager.getConnection(config.getUrl(), config.getUser(), config.getPassword());

        // Create a statement object to execute queries

        Statement stmt = connection.createStatement();

        // We can use the statement object to make our queries.

        // Returns a boolean indicating success
//        stmt.execute("DELETE FROM albums WHERE id = 4");


        // Returns the number of rows affected.
//        stmt.executeUpdate("INSERT INTO albums (artist, record_name, release_date, sales, genre) VALUES ('Nelly furtado')");

        // Returns a ResultSet object
//        stmt.executeQuery("SELECT * FROM albums");

        // Handling the results with the ResultSet object.
        String selectQuery = "SELECT * FROM albums";
        ResultSet rs = stmt.executeQuery(selectQuery);



        while(rs.next()) {
            // do something with each row
            System.out.println("Here's an album");
            System.out.println(" id:" + rs.getLong("id"));
            System.out.println(" artist: " + rs.getString("artist"));
            System.out.println(" name: " + rs.getString("record_name"));
        }

        //Insert Query
        String insertQuery = "INSERT INTO albums (artist, record_name, release_date, genre, sales) VALUES('Nelly Furtado', 'Loose', 2006, 'Dance-pop, hip hop, R&B', 12.5)";
//
//        //For executeUpdate method, we have two arguments;
//        //First is the Query String we want to execute;
//        //Second is a constant from the Statement Object
//        //This gives us access to the ID's that are automatically generated by DB;
//
        stmt.executeUpdate(insertQuery, Statement.RETURN_GENERATED_KEYS);
//
//        // We can then use the getGeneratedKeys() method on the ResultSet object
//        // This will hold any ids generated by the database.
        ResultSet rsKeys = stmt.getGeneratedKeys();
//
        if(rsKeys.next()){
            System.out.println("Inserted a new record! New id is: " +rsKeys.getLong(1));
        }
    }
}
